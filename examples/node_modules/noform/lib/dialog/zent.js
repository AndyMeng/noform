'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _DialogFormFactory = require('./DialogFormFactory');

var _DialogFormFactory2 = _interopRequireDefault(_DialogFormFactory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var CompatiMap = function CompatiMap(Dialog) {
    var _this = this;

    _classCallCheck(this, CompatiMap);

    this.getUniqueId = function () {
        return Math.random().toString(36).slice(2);
    };

    this.show = function (options) {
        var className = options.className,
            content = options.content,
            footer = options.footer,
            others = _objectWithoutProperties(options, ['className', 'content', 'footer']);

        var dialogId = _this.getUniqueId();
        var footerElements = null;
        if (footer) {
            footerElements = footer(_this.hide);
        }
        return _extends({}, others, {
            dialogId: dialogId,
            children: content,
            footer: footerElements,
            className: (className || '') + ' zent-dialog-form-wrapper'
        });
    };

    this.dialogInstance = function (hide) {
        var dialogInstance = {};
        dialogInstance.hide = hide;

        return dialogInstance;
    };

    this.btnLoadingProps = 'loading';
    this.Dialog = Dialog;
};

var DialogFormWrapper = function DialogFormWrapper(ZentSource) {
    var Dialog = ZentSource.Dialog,
        Button = ZentSource.Button;

    Dialog.show = Dialog.openDialog;

    var compatiMap = new CompatiMap(Dialog);

    return new _DialogFormFactory2['default']({
        Dialog: Dialog,
        Button: Button,
        compatiMap: compatiMap
    });
};

exports['default'] = DialogFormWrapper;
module.exports = exports['default'];