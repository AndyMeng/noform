'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Container = (_temp = _class = function (_Component) {
    _inherits(Container, _Component);

    function Container(props, context) {
        _classCallCheck(this, Container);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.itemsConfig = props.itemsConfig;
        _this.repeaterCore = props.repeaterCore;
        _this.doAdd = props.doAdd;
        _this.doUpdate = props.doUpdate;
        _this.doDelete = props.doDelete;
        _this.doSave = props.doSave;
        _this.doCancel = props.doCancel;
        _this.doAddInline = props.doAddInline;
        _this.doUpdateInline = props.doUpdateInline;
        _this.jsxProps = props.jsxProps;
        return _this;
    }

    Container.prototype.getChildContext = function getChildContext() {
        return {
            jsxProps: this.jsxProps,
            itemsConfig: this.itemsConfig,
            repeaterCore: this.repeaterCore,
            doAdd: this.doAdd,
            doUpdate: this.doUpdate,
            doDelete: this.doDelete,
            doSave: this.doSave,
            doCancel: this.doCancel,
            doAddInline: this.doAddInline,
            doUpdateInline: this.doUpdateInline
        };
    };

    Container.prototype.render = function render() {
        var render = this.props.render;

        return render(this);
    };

    return Container;
}(_react.Component), _class.childContextTypes = {
    jsxProps: _propTypes2['default'].object,
    itemsConfig: _propTypes2['default'].array,
    repeaterCore: _propTypes2['default'].object,
    doAdd: _propTypes2['default'].func,
    doUpdate: _propTypes2['default'].func,
    doDelete: _propTypes2['default'].func,
    doSave: _propTypes2['default'].func,
    doCancel: _propTypes2['default'].func,
    doAddInline: _propTypes2['default'].func,
    doUpdateInline: _propTypes2['default'].func
}, _temp);
Container.displayName = 'Container';


Container.propTypes = {
    itemsConfig: _propTypes2['default'].array,
    repeaterCore: _propTypes2['default'].object,
    doAdd: _propTypes2['default'].func,
    doUpdate: _propTypes2['default'].func,
    doDelete: _propTypes2['default'].func,
    doSave: _propTypes2['default'].func,
    doCancel: _propTypes2['default'].func,
    doAddInline: _propTypes2['default'].func,
    doUpdateInline: _propTypes2['default'].func,
    render: _propTypes2['default'].func,
    jsxProps: _propTypes2['default'].object
};

exports['default'] = Container;
module.exports = exports['default'];