'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _deepEqual = require('deep-equal');

var _deepEqual2 = _interopRequireDefault(_deepEqual);

var _form = require('../core/form');

var _form2 = _interopRequireDefault(_form);

var _static = require('../static');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var noop = function noop() {};

var Form = (_temp = _class = function (_Component) {
    _inherits(Form, _Component);

    function Form(props, context) {
        _classCallCheck(this, Form);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.onChange = function (val, fireKey) {
            _this.props.onChange(val, fireKey, _this.core);
        };

        var item = context.item;

        // 初始化core

        if (props.core) {
            _this.core = props.core;
        } else {
            // 无core则自定义生成不需要处理onChange, 使用jsx上的
            var onChange = props.onChange,
                others = _objectWithoutProperties(props, ['onChange']);

            _this.core = new _form2['default'](others);
        }

        // 绑定事件和视图
        _this.core.jsx = _this;
        _this.core.on(_static.CHANGE, _this.onChange);
        _this.core.on(_static.FOCUS, _this.props.onFocus);
        _this.core.on(_static.BLUR, _this.props.onBlur);

        // 嵌套Form
        if (item) _this.item = item;
        return _this;
    }

    Form.prototype.getChildContext = function getChildContext() {
        // 传递form
        return { form: this.core };
    };

    Form.prototype.componentDidMount = function componentDidMount() {
        var _props = this.props,
            validateConfig = _props.validateConfig,
            map = _props.map,
            value = _props.value,
            core = _props.core;

        this.props.onMount(this.core); // 返回core

        // 校验规则
        if ('validateConfig' in this.props && validateConfig) {
            this.core.setValidateConfig(validateConfig);
        } else if (core && 'validateConfig' in core && core.validateConfig) {
            this.core.setValidateConfig(core.validateConfig);
        }

        // 初始化赋值，map为格式化方法
        if ('value' in this.props && value) {
            this.core.setValueSilent(map(value));
        }

        // 静默更新初始化interceptor
        if (Object.keys(this.core.interceptor).length > 0) {
            this.core.setValueSilent({});
        }

        // 嵌套绑定当前form
        if (this.item) {
            this.item.bindForm(this.core);
        }

        // 强制渲染一次
        this.forceUpdate();
    };

    Form.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        // 根据属性来配置
        if (!(0, _deepEqual2['default'])(nextProps.value, this.props.value)) {
            this.core.setValueSilent(nextProps.value);
        }
        if (!(0, _deepEqual2['default'])(nextProps.props, this.props.props)) {
            this.core.setProps(nextProps.props);
        }
        if (!(0, _deepEqual2['default'])(nextProps.status, this.props.status)) {
            this.core.setStatus(nextProps.status);
        }
        if (!(0, _deepEqual2['default'])(nextProps.error, this.props.error)) {
            this.core.setError(nextProps.error);
        }
    };

    // 核心变化时，通知jsx属性绑定的onChange


    Form.prototype.render = function render() {
        // 默认布局为垂直布局
        var _props2 = this.props,
            full = _props2.full,
            _props2$style = _props2.style,
            style = _props2$style === undefined ? {} : _props2$style,
            children = _props2.children,
            _props2$className = _props2.className,
            className = _props2$className === undefined ? '' : _props2$className,
            _props2$direction = _props2.direction,
            direction = _props2$direction === undefined ? 'vertical' : _props2$direction;

        return _react2['default'].createElement(
            'div',
            { style: style, className: 'no-form no-form-' + direction + ' ' + className + ' no-form-' + (full ? 'full' : 'auto') },
            children
        );
    };

    return Form;
}(_react.Component), _class.defaultProps = {
    onChange: noop,
    onFocus: noop,
    onBlur: noop,
    onMount: noop,
    map: function map(v) {
        return v;
    },
    core: null,
    validateConfig: null,
    value: null,
    error: null,
    status: _static.STATUS_ENUMS.EDIT,
    globalStatus: _static.STATUS_ENUMS.EDIT,
    props: null
}, _class.propTypes = {
    onChange: _propTypes2['default'].func,
    onFocus: _propTypes2['default'].func,
    onBlur: _propTypes2['default'].func,
    onMount: _propTypes2['default'].func,
    map: _propTypes2['default'].func,
    core: _propTypes2['default'].instanceOf(_form2['default']),
    validateConfig: _propTypes2['default'].oneOfType([_propTypes2['default'].object, _propTypes2['default'].array]),
    value: _propTypes2['default'].object,
    error: _propTypes2['default'].object,
    status: _propTypes2['default'].oneOfType([_propTypes2['default'].object, _propTypes2['default'].string]),
    globalStatus: _propTypes2['default'].string,
    props: _propTypes2['default'].object
}, _class.contextTypes = {
    item: _propTypes2['default'].object
}, _class.childContextTypes = {
    form: _propTypes2['default'].object
}, _temp);
Form.displayName = 'Form';


Form.displayName = 'NoForm';

exports['default'] = Form;
module.exports = exports['default'];