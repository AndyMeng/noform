'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _DialogFormFactory = require('./DialogFormFactory');

var _DialogFormFactory2 = _interopRequireDefault(_DialogFormFactory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var DialogFormWrapper = function DialogFormWrapper(AntdSource) {
    var Modal = AntdSource.Modal,
        Button = AntdSource.Button;

    Modal.show = Modal.confirm;

    var compatiMap = {
        show: function show(options) {
            var className = options.className,
                others = _objectWithoutProperties(options, ['className']);

            return _extends({}, others, {
                className: (className || '') + ' dialog-form-wrapper',
                iconType: true
            });
        },
        dialogInstance: function dialogInstance(_dialogInstance) {
            _dialogInstance.hide = _dialogInstance.destroy;
            return _dialogInstance;
        },
        btnLoadingProps: 'loading'
    };

    return new _DialogFormFactory2['default']({
        Dialog: Modal,
        Button: Button,
        compatiMap: compatiMap
    });
};

exports['default'] = DialogFormWrapper;
module.exports = exports['default'];