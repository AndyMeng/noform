'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Item = require('./Item');

var _Item2 = _interopRequireDefault(_Item);

var _static = require('../static');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var formItemPrefix = 'no-form';

var FormItem = (_temp = _class = function (_Component) {
    _inherits(FormItem, _Component);

    // 上有form下有if
    FormItem.prototype.getChildContext = function getChildContext() {
        // 传递form   
        return { form: this.form, ifCore: this.ifCore };
    };

    function FormItem(props, context) {
        _classCallCheck(this, FormItem);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.update = function () {
            // 强制刷新
            if (_this.didMount) {
                _this.forceUpdate();
            }
        };

        if (!context.form) {
            var _ret;

            return _ret = _this, _possibleConstructorReturn(_this, _ret);
        }

        _this.form = context.form;
        _this.ifCore = context.ifCore;
        if (props.name) {
            _this.name = props.name;
        }
        return _this;
    }

    FormItem.prototype.componentDidMount = function componentDidMount() {
        // 绑定set事件就会执行更新 TODO：优化渲染
        this.form.on(_static.ANY_CHANGE, this.update);
        this.didMount = true;
    };

    FormItem.prototype.componentWillUnmount = function componentWillUnmount() {
        // 解绑
        this.form.removeListener(_static.ANY_CHANGE, this.update);
        this.didMount = false;
    };

    FormItem.prototype.render = function render() {
        var _props = this.props,
            children = _props.children,
            itemProps = _objectWithoutProperties(_props, ['children']);

        var name = itemProps.name,
            _itemProps$style = itemProps.style,
            style = _itemProps$style === undefined ? {} : _itemProps$style;
        var _itemProps$className = itemProps.className,
            className = _itemProps$className === undefined ? '' : _itemProps$className;

        var props = this.form.getItemProps(name) || {}; // 动态props
        var status = this.form.getItemStatus(name); // 动态status
        var error = this.form.getItemError(name); // 动态error

        // 保留item关键字属性

        var _props$props = _extends({}, this.props, props),
            label = _props$props.label,
            top = _props$props.top,
            suffix = _props$props.suffix,
            prefix = _props$props.prefix,
            help = _props$props.help,
            required = _props$props.required,
            coreFull = _props$props.full;

        var errInfo = error && (typeof error === 'undefined' ? 'undefined' : _typeof(error)) === 'object' ? error.__error : error;

        if (status === _static.HIDDEN) {
            return null;
        }

        if (required && status === _static.EDIT) {
            className += ' required';
        }

        // 处理布局

        var _form$jsx$props$itemP = _extends({}, this.form.jsx.props, itemProps),
            _form$jsx$props$itemP2 = _form$jsx$props$itemP.layout,
            layout = _form$jsx$props$itemP2 === undefined ? {} : _form$jsx$props$itemP2,
            jsxFull = _form$jsx$props$itemP.full;

        var full = jsxFull || coreFull;

        return _react2['default'].createElement(
            'div',
            { name: 'form-item-' + name, className: formItemPrefix + '-item ' + className, style: style },
            _react2['default'].createElement(
                'span',
                { className: formItemPrefix + '-item-label ' + (layout.label ? 'col-' + layout.label : '') },
                label
            ),
            _react2['default'].createElement(
                'span',
                { className: formItemPrefix + '-item-control ' + (layout.control ? 'col-' + layout.control : '') },
                top ? _react2['default'].createElement(
                    'span',
                    { className: formItemPrefix + '-item-top' },
                    top
                ) : null,
                _react2['default'].createElement(
                    'span',
                    { className: formItemPrefix + '-item-content ' + (full ? formItemPrefix + '-full' : '') },
                    prefix ? _react2['default'].createElement(
                        'span',
                        { className: formItemPrefix + '-item-content-prefix' },
                        prefix
                    ) : null,
                    _react2['default'].createElement(
                        'span',
                        { className: formItemPrefix + '-item-content-elem is-' + status },
                        _react2['default'].createElement(
                            _Item2['default'],
                            itemProps,
                            children
                        )
                    ),
                    suffix ? _react2['default'].createElement(
                        'span',
                        { className: formItemPrefix + '-item-content-suffix' },
                        suffix
                    ) : null
                ),
                help ? _react2['default'].createElement(
                    'span',
                    { className: formItemPrefix + '-item-help' },
                    help
                ) : null,
                errInfo ? _react2['default'].createElement(
                    'span',
                    { className: formItemPrefix + '-item-error' },
                    errInfo
                ) : null
            )
        );
    };

    return FormItem;
}(_react.Component), _class.defaultProps = {
    name: '',
    value: null,
    children: null
}, _class.propTypes = {
    name: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),
    value: _propTypes2['default'].object,
    children: _propTypes2['default'].any }, _class.contextTypes = {
    form: _propTypes2['default'].object,
    ifCore: _propTypes2['default'].object
}, _class.childContextTypes = {
    form: _propTypes2['default'].object,
    ifCore: _propTypes2['default'].object
}, _temp);
FormItem.displayName = 'FormItem';


FormItem.displayName = 'FormItem';

exports['default'] = FormItem;
module.exports = exports['default'];